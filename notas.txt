node_modules/              # Dependencias instaladas por npm
public/                    # Archivos públicos que no pasan por el bundler (favicon, etc.)

src/                       # Código fuente de la aplicación
├── assets/                # Imágenes, íconos y recursos estáticos locales
│
├── components/            # Componentes reutilizables de la UI
│   ├── filters/           # Filtros usados en SearchPage
│   │   ├── ActiveFilters.jsx   # Chips/etiquetas con filtros activos (permite quitarlos)
│   │   └── SearchFilters.jsx   # Controles de filtros (categoría, precio, orden)
│   │
│   ├── layouts/           # Wrappers globales (estructura de páginas)
│   │   └── MainLayout.jsx      # Layout principal con Navbar + Footer + children
│   │
│   ├── ui/                # Pequeños componentes UI reutilizables
│   │   ├── Button.jsx          # Botón genérico con estilos comunes
│   │   └── SearchBar.jsx       # Barra de búsqueda reutilizable (redirige a SearchPage)
│   │
│   ├── Carousel.jsx       # Carrusel de imágenes, se puede usar en Home u otros layouts
│   ├── Footer.jsx         # Pie de página global
│   └── Navbar.jsx         # Barra de navegación con links principales y SearchBar
│
├── features/              # Lógica de negocio agrupada por dominio (Redux slices, etc.)
│   ├── cart/              # Todo lo relacionado con el carrito de compras
│   │   └── cartSlice.jsx       # Redux slice para manejar el carrito
│   │
│   ├── products/          # Todo lo relacionado con productos
│   │   ├── ProductCard.jsx     # Card visual de un producto (imagen, precio, botón, etc.)
│   │   ├── ProductsList.jsx    # Renderiza listas de ProductCard
│   │   └── productsSlice.jsx   # Redux slice para manejar productos (favoritos, cache, etc.)
│   │
│   └── user/              # Todo lo relacionado con usuarios/login
│       (vacío por ahora)
│
├── hooks/                 # Custom hooks para encapsular lógica reutilizable
│   ├── useFetch.js             # Hook genérico para hacer fetch de datos
│   ├── useFilteredProducts.js  # Hook que aplica filtros sobre productos (SearchPage)
│   └── useLocalStorage.js      # Hook para leer/escribir datos en localStorage
│
├── pages/                 # Páginas completas, se renderizan en las rutas
│   ├── CartPage.jsx            # Página del carrito (vacío por ahora)
│   ├── HomePage.jsx            # Página principal, muestra productos + categorías
│   ├── LoginPage.jsx           # Página de login de usuario
│   ├── ProductDetailPage.jsx   # Detalle de un producto individual
│   └── SearchPage.jsx          # Explorador avanzado de catálogo con filtros
│
├── routes/                # Definición de rutas
│   ├── AppRouter.jsx           # Rutas principales (públicas/privadas)
│   └── PrivateRoute.jsx        # Wrapper para proteger rutas privadas
│
├── services/              # Llamadas a APIs externas
│   ├── api.js                  # Configuración base de axios (baseURL, timeouts)
│   └── products.js             # Funciones específicas para productos (getProducts, etc.)
│
├── styles/                # Estilos globales
│   ├── App.css                # Estilos generales específicos de la app
│   └── index.css              # Entrada principal (Tailwind + resets)
│
├── utils/                 # Funciones utilitarias
│   ├── formatPrice.js          # Dar formato a precios (ej: $12.50 → USD 12,50)
│   └── calculateDiscount.js    # Calcular descuentos (ej: precio - %)
│
├── App.jsx                # Componente raíz de la app
├── main.jsx               # Entrada principal de React + ReactDOM
│
.gitignore
eslint.config.js
index.html
notas.txt                  # Archivo personal de notas ⚠️ (en .gitignore)
package-lock.json
package.json
postcss.config.js
README.md
tailwind.config.js
vite.config.js
